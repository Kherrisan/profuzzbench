FROM ubuntu:22.04

ARG proxy=http://172.17.0.1:7890
ENV http_proxy=$proxy
ENV https_proxy=$proxy

RUN apt install apt-transport-https ca-certificates
RUN sed -i 's@//.*archive.ubuntu.com@//mirrors.seu.edu.cn@g' /etc/apt/sources.list && apt clean

# LLVM-17
RUN apt-get update && apt-get install -y --no-install-recommends wget gnupg2 && rm -rf /var/lib/apt/lists
RUN echo deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-17 main >> /etc/apt/sources.list
RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -

# Install common dependencies
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y \
    apt-utils git build-essential curl libgnutls28-dev libssl-dev sudo libtool libtool-bin libglib2.0-dev bison flex automake python3 python3-dev python3-setuptools python-is-python3 libpixman-1-dev gcc-9-plugin-dev cgroup-tools \
    libllvm-17-ocaml-dev libllvm17 llvm-17 llvm-17-dev llvm-17-doc llvm-17-examples llvm-17-runtime \
    clang-17 clang-tools-17 clang-17-doc libclang-common-17-dev libclang-17-dev libclang1-17 clang-format-17 python3-clang-17 clangd-17 clang-tidy-17 \
    libclang-rt-17-dev lldb-17 lld-17 libc++-17-dev libc++abi-17-dev \
    rsync autopoint bison gperf autoconf texinfo gettext \
    libtool pkg-config libz-dev python3-pip \
    awscli openssh-server ncat netcat openssl \
    vim nano screen htop man wget httpie bash-completion ripgrep \
    gdb byobu \
    graphviz-dev libcap-dev libpcap-dev \
    iputils-ping telnet net-tools \
    strace zsh autojump \
    && rm -rf /var/lib/apt/lists

RUN pip3 install gcovr

RUN update-alternatives --install /usr/bin/clang clang $(which clang-17) 1 && \
    update-alternatives --install /usr/bin/clang++ clang++ $(which clang++-17) 1 && \
    update-alternatives --install /usr/bin/llvm-config llvm-config $(which llvm-config-17) 1 && \
    update-alternatives --install /usr/bin/llvm-symbolizer llvm-symbolizer $(which llvm-symbolizer-17) 1 && \
    update-alternatives --install /usr/bin/llvm-cov llvm-cov $(which llvm-cov-17) 1 && \
    update-alternatives --install /usr/bin/llvm-profdata llvm-profdata $(which llvm-profdata-17) 1

# Users & SSH
##############
# Add a new user ubuntu, pass: ubuntu
RUN groupadd -g 1013 ubuntu && \
    useradd -u 1013 -rm -d /home/ubuntu -s /bin/zsh -g ubuntu -G sudo ubuntu -p "$(openssl passwd -1 ubuntu)" && \
    echo "ubuntu ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

RUN chmod 777 /tmp

# Set up zinit
RUN NO_INPUT=1 bash -c "$(curl --fail --show-error --silent --location https://raw.githubusercontent.com/zdharma-continuum/zinit/HEAD/scripts/install.sh)"

# Use ubuntu as default username
USER ubuntu
WORKDIR /home/ubuntu

RUN git config --global http.proxy $proxy && \
    git config --global https.proxy $proxy && \
    git config --global http.version HTTP/1.1 

# Set up afl environment
RUN git clone https://github.com/AFLplusplus/AFLplusplus.git && \
    cd AFLplusplus && \
    make all && \
    sudo make install

# Set up rust environments
ENV RUSTUP_DIST_SERVER=https://mirrors.ustc.edu.cn/rust-static \
    RUSTUP_UPDATE_ROOT=https://mirrors.ustc.edu.cn/rust-static/rustup

RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y; 
RUN . "$HOME/.cargo/env" && \
    rustup --version; \
    cargo --version; \
    rustc --version; \
    rustup default nightly

RUN printf "[source.crates-io]\nreplace-with = \"seu\"\n\n[source.ustc]\nregistry = \"sparse+https://mirrors.seu.edu.cn/crates.io-index/\"" > /home/ubuntu/.cargo/config

COPY .zshrc /home/ubuntu/.zshrc